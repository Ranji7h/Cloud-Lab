YACC Program to Implement Simple Calculator
LEXICAL ANAYSER CODE:

%{
/* Definition section */
#include<stdio.h>
#include "y.tab.h"
extern int yylval;
%}

/* Rule Section */
%%
[0-9]+ {
		yylval=atoi(yytext);
		return NUMBER;

	}
[\t] ;

[\n] return 0;

. return yytext[0];

%%

int yywrap()
{
return 1;
}

PARSER SOURCE CODE:
%{
/* Definition section */
#include<stdio.h>
int flag=0;
%}

%token NUMBER
%left '+' '-'
%left '*' '/' '%'
%left '(' ')'
/* Rule Section */
%%
ArithmeticExpression: E{

		printf("\nResult=%d\n", $$);
		return 0;
		};
E:E'+'E {$$=$1+$3;}
|E'-'E {$$=$1-$3;}
|E''E {$$=$1$3;}
|E'/'E {$$=$1/$3;}
|E'%'E {$$=$1%$3;}
|'('E')' {$$=$2;}
| NUMBER {$$=$1;}

;
%%
//driver code
void main()
{
printf("\nEnter Any Arithmetic Expression whichcan have operations Addition,Subtraction, Multiplication, Division,Modulus and Round brackets:\n");
yyparse();
if(flag==0)
printf("\nEntered arithmetic expression is Valid\n\n");
}
void yyerror()
{
printf("\nEntered arithmetic expression is Invalid\n\n");
flag=1;
}



YACC Program to Validate Phone Number

Lex:
%{
#include "y.tab.h";
%}
%%
\+91 {return A;}
[6-9]{1}[0-9]{9} {return B;}
\n {return NL;}
%%
int yywrap()
{
return 1;
}

Yaac:

%{
/* Definition section */
#include<stdio.h>
#include<stdlib.h>
%}
%token A B NL
/* Rule Section */
%%
stmt: A B NL { printf("valid phone number\n");
exit(0); }
;
%%
int yyerror()
{
printf("invalid phone number\n");
exit(0);
}
int main()
{
printf("enter the phone number: \n");
yyparse();
}



YACC PROGRAM TO VALIDE PINCODE
Lex:
%{
#include "y.tab.h";
%}
%%
[6]{1}[0-9]{2} {return A;}
\- {return B;}
[0-9]{3} {return C;}
\n {return NL;}
%%
int yywrap()
{
return 1;
}

Yaac

%{
/* Definition section */
#include<stdio.h>;
#include<stdlib.h>;
%}
%token A B C NL
/* Rule Section */
%%
stmt: A B C NL { printf("It is a Tamilnadu pincode\n");
exit(0); }
;
%%
int yyerror()
{
printf("Invalid pincode\n");
exit(0);
}
//driver code
main()
{
printf("enter the pincode: \n");

yyparse();
}




YAAC PROGARM TO VALID DATE FORMAT
LEX:

%{
#include "y.tab.h";
%}
%%
0[1-9]|1[0-2] {return M;}
\/ {return B;}
[1-9]|[1-2][0-9]|3[0-1] {return D;}
[1-2][0-9][0-9][0-9] {return Y;}
\n {return NL;}
%%
int yywrap()
{
return 1;
}
YAAC:
%{
/* Definition section */
#include<stdio.h>
#include<stdlib.h>
%}
%token D B M Y NL
/* Rule Section */
%%
stmt: D B M B Y NL { printf("Valid date format\n");
exit(0); }
;
%%
int yyerror()
{
printf("Invalid date format\n");
exit(0);
}
//driver code
main()
{
printf("enter the date: \n");
yyparse();
}



YACC Program to Validate Email ID
LEX:
%{
#include "y.tab.h";
%}
%%
[a-z]* {return C;}
@ {return B;}
[a-z0-9]* {return A;}
\. {return D;}
%%
int yywrap()
{
return 1;
}

YAAC:


%{
/* Definition section */
#include<stdio.h>
#include<stdlib.h>
%}
%token A B C D
/* Rule Section */
%%
stmt: A B C D C { printf("Valid Email ID\n");
exit(0); }
;
%%
int yyerror()
{
printf("invalid Email ID\n");
exit(0);
}
//driver code
main()
{
printf("Enter the Email ID: \n");
yyparse();
}





